/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Pet1PlasticBottle as PrismaPet1PlasticBottle,
} from "@prisma/client";

export class Pet1PlasticBottleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Pet1PlasticBottleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pet1PlasticBottle.count(args);
  }

  async pet1PlasticBottles(
    args: Prisma.Pet1PlasticBottleFindManyArgs
  ): Promise<PrismaPet1PlasticBottle[]> {
    return this.prisma.pet1PlasticBottle.findMany(args);
  }
  async pet1PlasticBottle(
    args: Prisma.Pet1PlasticBottleFindUniqueArgs
  ): Promise<PrismaPet1PlasticBottle | null> {
    return this.prisma.pet1PlasticBottle.findUnique(args);
  }
  async createPet1PlasticBottle(
    args: Prisma.Pet1PlasticBottleCreateArgs
  ): Promise<PrismaPet1PlasticBottle> {
    return this.prisma.pet1PlasticBottle.create(args);
  }
  async updatePet1PlasticBottle(
    args: Prisma.Pet1PlasticBottleUpdateArgs
  ): Promise<PrismaPet1PlasticBottle> {
    return this.prisma.pet1PlasticBottle.update(args);
  }
  async deletePet1PlasticBottle(
    args: Prisma.Pet1PlasticBottleDeleteArgs
  ): Promise<PrismaPet1PlasticBottle> {
    return this.prisma.pet1PlasticBottle.delete(args);
  }
}
