/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Hdpe2PlasticBottle as PrismaHdpe2PlasticBottle,
} from "@prisma/client";

export class Hdpe2PlasticBottleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.Hdpe2PlasticBottleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hdpe2PlasticBottle.count(args);
  }

  async hdpe2PlasticBottles(
    args: Prisma.Hdpe2PlasticBottleFindManyArgs
  ): Promise<PrismaHdpe2PlasticBottle[]> {
    return this.prisma.hdpe2PlasticBottle.findMany(args);
  }
  async hdpe2PlasticBottle(
    args: Prisma.Hdpe2PlasticBottleFindUniqueArgs
  ): Promise<PrismaHdpe2PlasticBottle | null> {
    return this.prisma.hdpe2PlasticBottle.findUnique(args);
  }
  async createHdpe2PlasticBottle(
    args: Prisma.Hdpe2PlasticBottleCreateArgs
  ): Promise<PrismaHdpe2PlasticBottle> {
    return this.prisma.hdpe2PlasticBottle.create(args);
  }
  async updateHdpe2PlasticBottle(
    args: Prisma.Hdpe2PlasticBottleUpdateArgs
  ): Promise<PrismaHdpe2PlasticBottle> {
    return this.prisma.hdpe2PlasticBottle.update(args);
  }
  async deleteHdpe2PlasticBottle(
    args: Prisma.Hdpe2PlasticBottleDeleteArgs
  ): Promise<PrismaHdpe2PlasticBottle> {
    return this.prisma.hdpe2PlasticBottle.delete(args);
  }
}
